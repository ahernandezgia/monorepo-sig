version: "3"

services:
    sig.api:
        build:
            context: ./src/sig-api/vendor/laravel/sail/runtimes/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: '1000'
        image: sail-8.3/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '8080:80'
            # - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: 'sail'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - './src/sig-api/:/var/www/html'
        networks:
          custom:

    # api.storage:
    #     build: src/api-storage
    #     environment: 
    #     - ENV=dev
    #     - DB_URI=mongodb://10.152.200.40:27017/File
    #     - BD_NAME=File_HumanResources
    #     - PORT=80
    #     - HOST=http://localhost
    #     - DB_CONNECTION=pgsql
    #     - DB_HOST=10.152.200.37
    #     - DB_PORT=5432
    #     - DB_DATABASE=sig_dev_auditorias
    #     - DB_USER=postgres
    #     - DB_PASSWORD=PqCanh94VTSRRJ
    #     - DB_SCHEMA=Human_resources
    #     networks:
    #       custom:

    apisecurity-svc:
        build: src/api-security
        environment: 
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - DbServer_psql="10.152.200.37"
        - DbPort_psql="5432"
        - DbName_psql="sig_h_security"
        - DbUser_psql="postgres"
        - DbPassword_psql="PqCanh94VTSRRJ"
        - ApiPrefix=security
        restart: always
        networks:
            custom:

    core-svc:
        build: src/api-core
        environment: 
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - DbServer_psql="10.152.200.37"
        - DbPort_psql="5432"
        - DbName_psql="sig_h_core"
        - DbUser_psql="postgres"
        - DbPassword_psql="PqCanh94VTSRRJ"
        - ApiPrefix=core
        restart: always
        networks:
            custom:
            
    sig.front:
        build: ./src/sig-front/
        volumes:
            - ./src/sig-front/:/var/www/html/
            - ./src/sig-front/docker/apache/certs:/etc/httpd/ssl
        ports:
            - 81:80
            - 444:443
        networks:
          custom:

    gateway:
        container_name: gateway
        build: src/api-gateway
        environment:
        - ASPNETCORE_ENVIRONMENT=Docker
        - ASPNETCORE_URLS=http://+:80
        - ClientApp=https://localhost
        - VIRTUAL_HOST=apirh.doiyu.mx
        - VIRTUAL_PORT=80
        networks:
          custom:

    nginx-proxy:
        restart: always
        build: reverse-proxy
        ports:
        - 80:80 #cambiar a 80
        - 443:443
        # depends_on:
        # - api.security
        # - api.storage
        # - api.core
        # - sig.api
        # - sig.front
        # - gateway
        volumes:
            - './reverse-proxy/:/etc/nginx/'
        networks:
          custom:

volumes:
    data:

networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16